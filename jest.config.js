module.exports = {
	preset: 'ts-jest',
	testEnvironment: 'jsdom',
	moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node'],
	modulePaths: ['<rootDir>'],
	transform: {
		'^.+\\.(ts|tsx|js|jsx)$': 'babel-jest',
	},
	moduleNameMapper: {
		'^@/(.*)$': '<rootDir>/src/$1',
	},
	collectCoverage: true,
	coverageDirectory: 'coverage',
	coverageReporters: ['text', 'lcov', 'clover'],
	coverageThreshold: {
		global: {
			branches: 80,
			functions: 80,
			lines: 80,
			statements: 80,
		},
	},
	coveragePathIgnorePatterns: [
		'/node_modules/',
		'/dist/',
		'.*.d.ts',
		'.*.config.js',
		'/src/assets/',
		'/src/styles/',
		'/src/types/',
		'/src/test-utils/',
		'/src/setupTests.ts',
	],
	setupFilesAfterEnv: ['<rootDir>/src/setupTests.ts'],
	globals: {
		'ts-jest': {
			tsconfig: 'tsconfig.json',
		},
		NODE_ENV: 'test',
	},
	prettierPath: null,
	testMatch: ['<rootDir>/src/**/*.{spec,test}.{js,jsx,ts,tsx}', '<rootDir>/tests/**/*.{spec,test}.{js,jsx,ts,tsx}'],
	transformIgnorePatterns: ['/node_modules/(?!three)/'],
	maxConcurrency: 5,
	maxWorkers: '50%',
	detectLeaks: true,
	detectOpenHandles: true,
	forceExit: false,
	resetMocks: true,
	restoreMocks: true,
	retryTimes: 3,
	testLocationInResults: true,
	verbose: false,
	watchman: true,
	cacheDirectory: '<rootDir>/.jest-cache',
	bail: false,
	clearMocks: true,
	errorOnDeprecated: false,
	injectGlobals: true,
	runner: 'jest-runner',
	slowTestThreshold: 5,
	snapshotSerializers: [],
	fakeTimers: {
		enableGlobally: false,
	},
	passWithNoTests: false,
	reporters: ['default'],
	rootDir: '<rootDir>',
	sandboxInjectedGlobals: [],
};